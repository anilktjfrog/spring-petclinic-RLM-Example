# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
  # name: varunm-azuredevops-piplines

variables:
  JFROG_PLATFORM_URL: "https://psazuse.jfrog.io"
  JFROG_USERNAME: ""
  JFROG_PASSWORD: ""
  RT_REPO_MVN_VIRTUAL: "krishnam-mvn-virtual"
  RT_REPO_MVN_DEV_LOCAL: "krishnam-mvn-dev-local"
  RT_REPO_DOCKER_VIRTUAL: "krishnam-docker-virtual"
  RT_REPO_DOCKER_DEV_LOCAL: "krishnam-docker-dev-local"
  BUILD_NAME: "spring-petclinic"
  BUILD_ID: "ado-$(Build.BuildNumber)"
steps:
- script: |
    java -version
    mvn -v
    docker -v
    python3 -V
    pip3 -V
    echo "BUILD_ID: $(BUILD_ID)"
    pwd
    tree .
  displayName: "Software version"

- task: JfrogCliV2@1
  inputs:
    jfrogPlatformConnection: 'jfrog-ps'
    command: 'jf rt ping'
    workingDirectory: "./"

- script: |
    jf -version
  displayName: "JF-CLI version"
